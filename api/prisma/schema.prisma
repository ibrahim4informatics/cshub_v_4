// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DocumentType {
  COURS
  EXAM
  TD
  TP
  HELPER
}

model User {
  id         String     @id @default(uuid())
  first_name String     @db.VarChar(35)
  last_name  String     @db.VarChar(35)
  password   String?
  google_id  String?    @unique
  email      String     @unique
  is_admin   Boolean    @default(false)
  documents  Document[] @relation(name: "owner who post the document")
  favourites Favourite[]
  created_at DateTime    @default(now())
}

model Module {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(125)
  coeficient Int        @db.SmallInt
  created_at DateTime   @default(now())
  documents  Document[]
  updated_at DateTime   @updatedAt
}

model Document {
  id            Int          @id @default(autoincrement())
  title         String       @db.VarChar(150)
  type          DocumentType
  download_link String
  module_id     Int
  owner_id      String
  module        Module       @relation(fields: [module_id], references: [id], onDelete: Cascade)
  owner         User         @relation(name: "owner who post the document", fields: [owner_id], references: [id], onDelete: Cascade)
  favourite_by  Favourite[]
}

model Favourite {
  id          Int      @id @default(autoincrement())
  user_id     String
  document_id Int
  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  document    Document @relation(fields: [document_id], references: [id], onDelete: Cascade)
  created_at  DateTime @default(now())
}
